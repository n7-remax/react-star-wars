{"version":3,"sources":["components/Planets/Planets.js","components/Planets/PlanetDescription/PlanetDescription.js","assets/image/logo.png","components/Header/Header.js","components/WelcomePage/WelcomePage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Planets","state","initialPage","props","match","params","page","count","nextPage","prevPage","currentPage","planets","getPlanets","a","axios","response","this","then","res","setState","data","next","previous","results","nextProps","nextState","classes","maxPages","Math","ceil","PlanetsList","map","planet","i","Card","className","root","to","url","CardContent","Typography","variant","component","name","pos","color","climate","population","Button","disabled","Component","withStyles","theme","margin","flex","marginBottom","withTheme","PlanetDescription","planetId","rotationPeriod","diameter","gravity","terrain","residents","getPlanetDescription","id","getResidents","rotation_period","Array","isArray","length","peopleId","item","Promise","all","element","e","join","Container","maxWidth","Header","src","logo","alt","WelcomePage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec98d0ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 10,\r\n        flex: '0 18%',\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nclass Planets extends Component {\r\n    state = {\r\n        initialPage: this.props.match.params.page,\r\n        count: null,\r\n        nextPage: 1,\r\n        prevPage: null,\r\n        currentPage: 1,\r\n        planets: []\r\n    }\r\n\r\n    getPlanets = async (page) => {\r\n        const response = await axios(page)\r\n        return response\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlanets(`planets/?page=${this.state.initialPage}`).then(res => {\r\n            this.setState({\r\n                count: res.data.count,\r\n                nextPage: res.data.next,\r\n                prevPage: res.data.previous,\r\n                planets: res.data.results\r\n            })\r\n        })\r\n    }\r\n    // if currentPage is changed, update component\r\n    componentDidUpdate(nextProps, nextState) {\r\n        if (this.state.currentPage !== nextState.currentPage) {\r\n            this.getPlanets(`planets/?page=${this.state.currentPage}`).then(res => {\r\n                this.setState({\r\n                    count: res.data.count,\r\n                    nextPage: res.data.next,\r\n                    prevPage: res.data.previous,\r\n                    planets: res.data.results\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    // merge url param props to trigger component update\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {\r\n            currentPage: props.match.params.page\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const maxPages = Math.ceil(this.state.count / 10);\r\n        const PlanetsList = this.state.planets.map((planet, i) => {\r\n            return (\r\n                <Card className={classes.root} key={i}>\r\n                    <Link to={`/react-star-wars/planet/${planet.url.match(/(\\d+)/)[0]}`} className=\"card-link\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                {planet.name}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                {planet.climate}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                Population: {planet.population}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Link>\r\n                </Card>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"planets\">\r\n                <div className=\"planets-list\">\r\n                    {PlanetsList}\r\n                </div>\r\n                <div className=\"planets-buttons\">\r\n                    <Link to={`/react-star-wars/planets/${this.state.currentPage > 1 ? +this.state.currentPage - 1 : this.state.currentPage}`}>\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={this.state.prevPage ? false : true}>\r\n                            Prev\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to={`/react-star-wars/planets/${this.state.currentPage < maxPages ? +this.state.currentPage + 1 : this.state.currentPage}`}>\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={this.state.nextPage ? false : true}>\r\n                            Next\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(Planets);\r\n","import { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\n\r\nclass PlanetDescription extends Component {\r\n    state = {\r\n        planetId: this.props.match.params.url,\r\n        name: \"\",\r\n        rotationPeriod: \"\",\r\n        diameter: \"\",\r\n        climate: \"\",\r\n        gravity: \"\",\r\n        terrain: \"\",\r\n        population: \"\",\r\n        residents: [],\r\n\r\n    }\r\n\r\n    getPlanetDescription = async (id) => {\r\n        const response = await axios(id)\r\n        return response\r\n    }\r\n\r\n    getResidents = async (url) => {\r\n        const response = await axios(url)\r\n        return response\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlanetDescription(`planets/${this.state.planetId}/`).then(res => {\r\n            this.setState({\r\n                name: res.data.name,\r\n                rotationPeriod: res.data.rotation_period,\r\n                diameter: res.data.diameter,\r\n                climate: res.data.climate,\r\n                gravity: res.data.gravity,\r\n                terrain: res.data.terrain,\r\n                population: res.data.population,\r\n            })\r\n            if (Array.isArray(res.data.residents) && res.data.residents.length) {\r\n                const peopleId = res.data.residents.map(item => item.match(/(\\d+)/)[0]);\r\n                Promise.all(peopleId.map(element => this.getResidents(`people/${element}/`))).then(res => {\r\n                    this.setState({\r\n                        residents: res.map(e => e.data.name).join(\", \")\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    residents: \"No data available\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const planet = this.state;\r\n        return (\r\n            <div className=\"planet-description\">\r\n                <Container maxWidth='sm' className=\"planet-description-box\">\r\n                    <h2>{planet.name}</h2>\r\n                    <div className=\"planet-description-list\">\r\n                        <p> Rotation Period: {planet.rotationPeriod}</p>\r\n                        <p> Diameter: {planet.diameter}</p>\r\n                        <p> Climate: {planet.climate}</p>\r\n                        <p> Gravity: {planet.gravity}</p>\r\n                        <p> Terrain: {planet.terrain}</p>\r\n                        <p> Population: {planet.population}</p>\r\n                        <p> Residents: {planet.residents}</p>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlanetDescription\r\n","export default __webpack_public_path__ + \"static/media/logo.4c69738d.png\";","import { Link } from 'react-router-dom';\r\nimport logo from '../../assets/image/logo.png'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to=\"/1\">\r\n                <img src={logo} alt=\"star-wars-logo\" className=\"logo\" />\r\n            </Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction WelcomePage() {\r\n    return (\r\n        <div className=\"welcome-page\">\r\n            <Link to=\"/react-star-wars/planets/1\">\r\n                <Button variant=\"contained\" color=\"primary\">Planets Info</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import { Route } from 'react-router-dom'\nimport Planets from './Planets/Planets';\nimport PlanetDescription from './Planets/PlanetDescription/PlanetDescription';\nimport Header from './Header/Header';\nimport WelcomePage from './WelcomePage/WelcomePage';\n\nimport '../style/style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Route exact path=\"/react-star-wars/\" component={WelcomePage} />\n      <Route exact path=\"/react-star-wars/planets/:page\" component={Planets} />\n      <Route exact path=\"/react-star-wars/planet/:url\" component={PlanetDescription} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\naxios.defaults.baseURL = \"http://swapi.dev/api/\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}